classes:
 ancestorChain
 arrayNode
 bindNode
 blankNode
 blockNode
 callNode
 callWithPart
 commentNode
 defDecNode
 dialectNode
 genericNode
 identifierNode
 ifNode
 importNode
 inheritsNode
 matchCaseNode
 memberNode
 methodNode
 methodTypeNode
 moduleNode
 numNode
 objectNode
 opNode
 returnNode
 signaturePart
 stringNode
 tryCatchNode
 typeDecNode
 typeLiteralNode
 typeParametersNode
 varDecNode
confidential:
 listMap()ancestors
 maybeListMap()ancestors
 maybeMap()ancestors
constructors-of:ancestorChain:
 cons()onto
 empty
constructors-of:arrayNode:
 new
constructors-of:bindNode:
 new
constructors-of:blankNode:
 new
constructors-of:blockNode:
 new
constructors-of:callNode:
 new
constructors-of:callWithPart:
 request()withArgs
constructors-of:commentNode:
 new
constructors-of:defDecNode:
 new
constructors-of:dialectNode:
 new
constructors-of:genericNode:
 new
constructors-of:identifierNode:
 new
constructors-of:ifNode:
 new
constructors-of:importNode:
 new
constructors-of:inheritsNode:
 new
constructors-of:matchCaseNode:
 new
constructors-of:memberNode:
 new
constructors-of:methodNode:
 new
constructors-of:methodTypeNode:
 new
constructors-of:moduleNode:
 body
constructors-of:numNode:
 new
constructors-of:objectNode:
 new
constructors-of:opNode:
 new
constructors-of:returnNode:
 new
constructors-of:signaturePart:
 partName()params
constructors-of:stringNode:
 new
constructors-of:tryCatchNode:
 new
constructors-of:typeDecNode:
 new
constructors-of:typeLiteralNode:
 new
constructors-of:typeParametersNode:
 new
constructors-of:varDecNode:
 new
fresh-methods:
 aliasNew()old
 baseNode
 baseVisitor
 pluggableVisitor
fresh:aliasNew()old:
 ==
 asString
 hash
 isExecutable
 newName
 oldName
 pretty
fresh:baseNode:
 ==
 accept
 addComment
 addComments
 asString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopyFieldsFrom
 statementName
 symbolTable
 usesAsType
fresh:baseVisitor:
 asString
 visitArray
 visitArray()up
 visitBind
 visitBind()up
 visitBlank
 visitBlank()up
 visitBlock
 visitBlock()up
 visitCall
 visitCall()up
 visitComment
 visitComment()up
 visitDefDec
 visitDefDec()up
 visitDialect
 visitDialect()up
 visitGeneric
 visitGeneric()up
 visitIdentifier
 visitIdentifier()up
 visitIf
 visitIf()up
 visitImport
 visitImport()up
 visitInherits
 visitInherits()up
 visitMatchCase
 visitMatchCase()up
 visitMember
 visitMember()up
 visitMethod
 visitMethod()up
 visitMethodType
 visitMethodType()up
 visitModule
 visitModule()up
 visitNum
 visitNum()up
 visitObject
 visitObject()up
 visitOp
 visitOp()up
 visitReturn
 visitReturn()up
 visitSignaturePart
 visitSignaturePart()up
 visitString
 visitString()up
 visitTryCatch
 visitTryCatch()up
 visitTypeDec
 visitTypeDec()up
 visitTypeLiteral
 visitTypeLiteral()up
 visitTypeParameters
 visitTypeParameters()up
 visitVarDec
 visitVarDec()up
fresh:pluggableVisitor:
 asString
 visitArray()up
 visitBind()up
 visitBlank()up
 visitBlock()up
 visitCall()up
 visitComment()up
 visitDefDec()up
 visitDialect()up
 visitGeneric()up
 visitIdentifier()up
 visitIf()up
 visitImport()up
 visitInherits()up
 visitMatchCase()up
 visitMember()up
 visitMethod()up
 visitMethodType()up
 visitModule()up
 visitNum()up
 visitObject()up
 visitOp()up
 visitReturn()up
 visitSignaturePart()up
 visitString()up
 visitTryCatch()up
 visitTypeDec()up
 visitTypeLiteral()up
 visitVarDec()up
methods-of:ancestorChain.cons()onto:
 asString
 extend
 forebears
 grandparent
 isEmpty
 parent
methods-of:ancestorChain.empty:
 asString
 extend
 isEmpty
methods-of:arrayNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:bindNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 dest
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:blankNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:blockNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 body
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 enclosingObject
 extraRuntimeData
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isEmpty
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 isntEmpty
 kind
 line
 linePos
 map()ancestors
 matchingPattern
 nameString
 parametersDo
 params
 pretty
 register
 returnedObjectScope
 returnsObject
 scope
 scope:=
 selfclosure
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:callNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 generics
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPattern
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnedObjectScope
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 target
 toGrace
 usesAsType
 value
 with
 ≠
methods-of:callWithPart.request()withArgs:
 !=
 ::
 ==
 accept
 addComment
 addComments
 args
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 lineLength
 linePos
 map()ancestors
 name
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 usesAsType
 ≠
methods-of:commentNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 endLine
 extendCommentUsing
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPartialLine
 isPreceededByBlankLine
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:defDecNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 annotations
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 dtype
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 name
 nameString
 pretty
 register
 returnedObjectScope
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 startToken
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:dialectNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 moduleName
 nameString
 path
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:genericNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 args
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:identifierNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 dtype
 enclosingObject
 generics
 hash
 inClass
 inRequest
 inTrait
 inTypePositionWithAncestors
 isAppliedOccurenceOfIdentifier
 isAssigned
 isBind
 isBindingOccurrence
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDeclaredByParent
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 quoted
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 wildcard
 ≠
methods-of:ifNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 elseblock
 enclosingObject
 handledIdentifiers
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 thenblock
 toGrace
 usesAsType
 value
 ≠
methods-of:importNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 annotations
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 dtype
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 moduleName
 name
 nameString
 path
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:inheritsNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addAlias()for
 addComment
 addComments
 addExclusion
 aliases
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 enclosingObject
 exclusions
 hash
 inClass
 inTrait
 inheritsFromCall
 inheritsFromMember
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isUse
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 providedNames
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:matchCaseNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 cases
 comments
 decType
 deepCopy
 description
 elsecase
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 matchee
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:memberNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asIdentifier
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 generics
 hash
 in
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 target
 toGrace
 usesAsType
 value
 ≠
methods-of:methodNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 annotations
 asDebugString
 asString
 basicAsString
 body
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 dtype
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isFresh
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 needsArgChecks
 pretty
 register
 returnedObjectScope
 returnsObject
 scope
 scope:=
 selfclosure
 shallowCopy
 shallowCopyFieldsFrom
 signature
 statementName
 symbolTable
 toGrace
 typeParams
 usesAsType
 usesClassSyntax
 value
 ≠
methods-of:methodTypeNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 parametersDo
 pretty
 register
 returnsObject
 rtype
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 signature
 statementName
 symbolTable
 toGrace
 typeParams
 usesAsType
 value
 ≠
methods-of:moduleNode.body:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 annotations
 asDebugString
 asString
 basicAsString
 body
 canInherit
 canUse
 comments
 decType
 deepCopy
 description
 enclosingObject
 executableComponentsDo
 externalsDo
 hash
 imports
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isModule
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 localNames
 map()ancestors
 methodsDo
 myLocalNames
 name
 nameString
 parentsDo
 pretty
 register
 returnedObjectScope
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 sourceLines
 statementName
 superclass
 symbolTable
 toGrace
 usedTraits
 usesAsType
 value
 ≠
methods-of:numNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:objectNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 annotations
 asDebugString
 asString
 basicAsString
 body
 canInherit
 canUse
 comments
 decType
 deepCopy
 description
 enclosingObject
 executableComponentsDo
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 localNames
 map()ancestors
 methodsDo
 myLocalNames
 name
 nameString
 parentsDo
 pretty
 register
 returnedObjectScope
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 superclass
 symbolTable
 toGrace
 usedTraits
 usesAsType
 value
 ≠
methods-of:opNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asIdentifier
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 left
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 right
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:returnNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:signaturePart.partName()params:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 lineLength
 linePos
 map()ancestors
 name
 nameString
 params
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 typeParams
 usesAsType
 ≠
methods-of:stringNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:tryCatchNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 cases
 comments
 decType
 deepCopy
 description
 enclosingObject
 finally
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methods-of:typeDecNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 annotations
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 name
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 typeParams
 usesAsType
 value
 ≠
methods-of:typeLiteralNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 anonymous
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 methods
 name
 name:=
 nameString
 nominal
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 types
 usesAsType
 value
 ≠
methods-of:typeParametersNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 do
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 nameString
 params
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 size
 statementName
 symbolTable
 toGrace
 usesAsType
 ≠
methods-of:varDecNode.new:
 !=
 ::
 ==
 accept
 accept()from
 addComment
 addComments
 annotations
 asDebugString
 asString
 basicAsString
 canInherit
 comments
 decType
 declarationKindWithAncestors
 deepCopy
 description
 dtype
 enclosingObject
 hash
 inClass
 inTrait
 isAppliedOccurenceOfIdentifier
 isBind
 isBlock
 isCall
 isClass
 isComment
 isConfidential
 isDialect
 isExecutable
 isExternal
 isFieldDec
 isIdentifier
 isImport
 isInherits
 isLegalInTrait
 isMatchingBlock
 isMe
 isMember
 isMethod
 isObject
 isPublic
 isReadable
 isSimple
 isTrait
 isTypeDec
 isWritable
 kind
 line
 linePos
 map()ancestors
 name
 nameString
 pretty
 register
 returnsObject
 scope
 scope:=
 shallowCopy
 shallowCopyFieldsFrom
 statementName
 symbolTable
 toGrace
 usesAsType
 value
 ≠
methodtypes-of:ASTVisitor:
 1 visitArray(o : Unknown)up(as : Unknown) -> Boolean
 1 visitBind(o : Unknown)up(as : Unknown) -> Boolean
 1 visitBlank(o : Unknown)up(as : Unknown) -> Boolean
 1 visitBlock(o : Unknown)up(as : Unknown) -> Boolean
 1 visitCall(o : Unknown)up(as : Unknown) -> Boolean
 1 visitComment(o : Unknown)up(as : Unknown) -> Boolean
 1 visitDefDec(o : Unknown)up(as : Unknown) -> Boolean
 1 visitDialect(o : Unknown)up(as : Unknown) -> Boolean
 1 visitGeneric(o : Unknown)up(as : Unknown) -> Boolean
 1 visitIdentifier(o : Unknown)up(as : Unknown) -> Boolean
 1 visitIf(o : Unknown)up(as : Unknown) -> Boolean
 1 visitImport(o : Unknown)up(as : Unknown) -> Boolean
 1 visitInherits(o : Unknown)up(as : Unknown) -> Boolean
 1 visitMatchCase(o : Unknown)up(as : Unknown) -> Boolean
 1 visitMember(o : Unknown)up(as : Unknown) -> Boolean
 1 visitMethod(o : Unknown)up(as : Unknown) -> Boolean
 1 visitMethodType(o : Unknown)up(as : Unknown) -> Boolean
 1 visitModule(o : Unknown)up(as : Unknown) -> Boolean
 1 visitNum(o : Unknown)up(as : Unknown) -> Boolean
 1 visitObject(o : Unknown)up(as : Unknown) -> Boolean
 1 visitOp(o : Unknown)up(as : Unknown) -> Boolean
 1 visitReturn(o : Unknown)up(as : Unknown) -> Boolean
 1 visitSignaturePart(o : Unknown)up(as : Unknown) -> Boolean
 1 visitString(o : Unknown)up(as : Unknown) -> Boolean
 1 visitTryCatch(o : Unknown)up(as : Unknown) -> Boolean
 1 visitTypeDec(o : Unknown)up(as : Unknown) -> Boolean
 1 visitTypeLiteral(o : Unknown)up(as : Unknown) -> Boolean
 1 visitTypeParameters(o : Unknown)up(as : Unknown) -> Boolean
 1 visitVarDec(o : Unknown)up(as : Unknown) -> Boolean
methodtypes-of:AliasPair:
 1 newName -> Done
 1 oldName -> Done
methodtypes-of:AstNode:
 1 comments -> AstNode
 1 kind -> String
 1 line -> Number
 1 line:=(ln : Number) -> Done
 1 linePos -> Number
 1 linePos:=(lp : Number) -> Done
 1 pretty(n : Number) -> String
 1 register -> String
 1 scope -> SymbolTable
methodtypes-of:SymbolTable:
modules:
 identifierKinds
 util
path:
 ast
public:
 ASTVisitor
 AliasPair
 AstNode
 SymbolTable
 aliasNew()old
 arrayNode
 baseNode
 baseVisitor
 bindNode
 blankNode
 blockNode
 dialectNode
 findAnnotation
 genericNode
 ifNode
 importNode
 lineLength
 matchCaseNode
 methodTypeNode
 nullNode
 numNode
 objectNode
 opNode
 pluggableVisitor
 returnNode
 tryCatchNode
 typeDecNode
 typeLiteralNode
 typeParametersNode
 typeType
 unknownType
 varDecNode
 wrap()to()prefix
types:
 ASTVisitor
 AliasPair
 AstNode
 SymbolTable
